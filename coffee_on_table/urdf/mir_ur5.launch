<launch>
	<!-- URDF -->
	<include file="$(find coffee_on_table)/urdf/upload_mir_ur_urdf.launch" />




	<!-- MIR -->
  <arg name="tf_prefix" default="" doc="TF prefix to use for all of MiR's TF frames"/>

  <arg name="mir_hostname" default="192.168.12.20" />

  <param name="tf_prefix" type="string" value="$(arg tf_prefix)"/>

  <!-- URDF -->
  <!--<include file="$(find mir_description)/launch/upload_mir_urdf.launch" />-->

  <!-- Robot state publisher -->
  <node name="robot_state_publisher1" pkg="robot_state_publisher" type="robot_state_publisher">
    <remap from="/tf"        to="tf_mir" />
    <remap from="/tf_static" to="tf_static_mir" />
  </node>

  <!-- remove those TFs that are also published by the MiR to avoid conflicts -->
  <node name="tf_remove_child_frames" pkg="mir_driver" type="tf_remove_child_frames.py" output="screen">
    <remap from="tf_in"         to="tf_mir" />
    <remap from="tf_out"        to="/tf" />
    <remap from="tf_static_in"  to="tf_static_mir" />
    <remap from="tf_static_out" to="/tf_static" />
    <rosparam param="remove_frames">
      - base_link
      - front_laser_link
      - back_laser_link
      - camera_top_link
      - camera_top_depth_optical_frame
      - camera_floor_link
      - camera_floor_depth_optical_frame
      - imu_link
    </rosparam>
  </node>

  <!-- MiR base -->
  <node name="mir_bridge" pkg="mir_driver" type="mir_bridge.py" output="screen">
    <param name="hostname" value="$(arg mir_hostname)" />
    <param name="tf_prefix" value="$(arg tf_prefix)" />
    <remap from="map" to="/map" />
    <remap from="map_metadata" to="/map_metadata" />
    <remap from="rosout" to="/rosout" />
    <remap from="rosout_agg" to="/rosout_agg" />
    <remap from="tf" to="/tf" />
  </node>

  <node name="b_rep117_laser_filter" pkg="mir_driver" type="rep117_filter.py" output="screen">
    <remap from="scan" to="b_scan" />
    <remap from="scan_filtered" to="b_scan_rep117" />
  </node>

  <node name="f_rep117_laser_filter" pkg="mir_driver" type="rep117_filter.py" output="screen">
    <remap from="scan" to="f_scan" />
    <remap from="scan_filtered" to="f_scan_rep117" />
  </node>

  <node name="fake_mir_joint_publisher" pkg="mir_driver" type="fake_mir_joint_publisher.py" output="screen" />
	




  <!-- UR -->
    <arg name="limited" default="false"/>
  <arg name="paused" default="false"/>
  <arg name="gui" default="true"/>
  
  <!-- startup simulated world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" default="worlds/empty.world"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="gui" value="$(arg gui)"/>
  </include>

  <!-- send robot urdf to param server -->
  <!--<include file="$(find ur_description)/launch/ur5_upload.launch">
    <arg name="limited" value="$(arg limited)"/>
  </include>-->

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model robot -z 0.1" respawn="false" output="screen" />

  <include file="$(find ur_gazebo)/launch/controller_utils.launch"/>

  <rosparam file="$(find ur_gazebo)/controller/arm_controller_ur5.yaml" command="load"/>
  <node name="arm_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn arm_controller" respawn="false" output="screen"/>
</launch>